{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useLogin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const validateField = (name, value) => {\n    let fieldErrors = {};\n    switch (name) {\n      case \"email\":\n        fieldErrors.email = !/\\S+@\\S+\\.\\S+/.test(value) ? \"Invalid email address\" : \"\";\n        break;\n      case \"password\":\n        fieldErrors.password = value.length < 8 ? \"Password must be at least 8 characters\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setErrors(prev => ({\n      ...prev,\n      ...fieldErrors\n    }));\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    validateField(name, value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (Object.values(errors).some(err => err)) {\n      setError(\"Please correct the errors in the form.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"/api/login-user\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(\"Login successful!\");\n        setFormData({\n          email: \"\",\n          password: \"\"\n        });\n        setErrors({});\n        // Optionally redirect or store token\n      } else {\n        setError(data.error || \"Invalid credentials\");\n      }\n    } catch (err) {\n      setError(\"Server error\");\n    }\n  };\n  return {\n    formData,\n    handleChange,\n    handleSubmit,\n    error,\n    success,\n    errors,\n    setFormData,\n    setError,\n    setSuccess,\n    setErrors\n  };\n};\n_s(useLogin, \"DoBshTOzOkkV4D41hd8CnWFDUs4=\");","map":{"version":3,"names":["useState","useLogin","_s","formData","setFormData","email","password","errors","setErrors","error","setError","success","setSuccess","validateField","name","value","fieldErrors","test","length","prev","handleChange","e","target","handleSubmit","preventDefault","Object","values","some","err","response","fetch","method","headers","body","JSON","stringify","data","json","ok"],"sources":["C:/Users/munee/OneDrive/Desktop/prod/MERN/AroundYOU/client/src/hooks/useLogin.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useLogin = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  \r\n  const [errors, setErrors] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const validateField = (name, value) => {\r\n    let fieldErrors = {};\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        fieldErrors.email = !/\\S+@\\S+\\.\\S+/.test(value) ? \"Invalid email address\" : \"\";\r\n        break;\r\n      case \"password\":\r\n        fieldErrors.password = value.length < 8 ? \"Password must be at least 8 characters\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      ...fieldErrors,\r\n    }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    validateField(name, value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (Object.values(errors).some((err) => err)) {\r\n      setError(\"Please correct the errors in the form.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/login-user\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccess(\"Login successful!\");\r\n        setFormData({ email: \"\", password: \"\" });\r\n        setErrors({});\r\n        // Optionally redirect or store token\r\n      } else {\r\n        setError(data.error || \"Invalid credentials\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    formData,\r\n    handleChange,\r\n    handleSubmit,\r\n    error,\r\n    success,\r\n    errors,\r\n    setFormData,\r\n    setError,\r\n    setSuccess,\r\n    setErrors,\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACvCK,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IACrC,IAAIC,WAAW,GAAG,CAAC,CAAC;IAEpB,QAAQF,IAAI;MACV,KAAK,OAAO;QACVE,WAAW,CAACX,KAAK,GAAG,CAAC,cAAc,CAACY,IAAI,CAACF,KAAK,CAAC,GAAG,uBAAuB,GAAG,EAAE;QAC9E;MACF,KAAK,UAAU;QACbC,WAAW,CAACV,QAAQ,GAAGS,KAAK,CAACG,MAAM,GAAG,CAAC,GAAG,wCAAwC,GAAG,EAAE;QACvF;MACF;QACE;IACJ;IAEAV,SAAS,CAAEW,IAAI,KAAM;MACnB,GAAGA,IAAI;MACP,GAAGH;IACL,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEP,IAAI;MAAEC;IAAM,CAAC,GAAGM,CAAC,CAACC,MAAM;IAEhClB,WAAW,CAAEe,IAAI,KAAM;MACrB,GAAGA,IAAI;MACP,CAACL,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;IAEHF,aAAa,CAACC,IAAI,EAAEC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAOF,CAAC,IAAK;IAChCA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClBd,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAIa,MAAM,CAACC,MAAM,CAACnB,MAAM,CAAC,CAACoB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAAC,EAAE;MAC5ClB,QAAQ,CAAC,wCAAwC,CAAC;MAClD;IACF;IAEA,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChC,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMiC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf1B,UAAU,CAAC,mBAAmB,CAAC;QAC/BR,WAAW,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC,CAAC;QACxCE,SAAS,CAAC,CAAC,CAAC,CAAC;QACb;MACF,CAAC,MAAM;QACLE,QAAQ,CAAC0B,IAAI,CAAC3B,KAAK,IAAI,qBAAqB,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZlB,QAAQ,CAAC,cAAc,CAAC;IAC1B;EACF,CAAC;EAED,OAAO;IACLP,QAAQ;IACRiB,YAAY;IACZG,YAAY;IACZd,KAAK;IACLE,OAAO;IACPJ,MAAM;IACNH,WAAW;IACXM,QAAQ;IACRE,UAAU;IACVJ;EACF,CAAC;AACH,CAAC;AAACN,EAAA,CAvFWD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}